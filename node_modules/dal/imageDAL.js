/**
 * Created with IntelliJ IDEA.
 * User: zmzsmnh
 * Date: 12-12-21
 * Time: 下午2:32
 * To change this template use File | Settings | File Templates.
 */

var collectionName = 'image';
var db = require('./mongo').db;
var dal = db.collection(collectionName);

db.bind(collectionName, {
    findAllAndsortByCreateTimePaging : function(fn) {
        dal.find({isPending: false}).sort({createTime: -1}).toArray(fn);
    },
    findAndsortByCreateTimePaging: function(query, fn) {
        query.isPending = false;
        dal.find(query).sort({createTime: -1}).toArray(fn);
    },
    findNextPageImagesSortByCreateTime: function(preId, pageDis, limitNumber, fn) {
        dal.find({isPending: false, _id: {$lt: db.ObjectID(preId)}}, {sort: {createTime: -1}}).skip((pageDis - 1) * limitNumber).limit(limitNumber + 1).toArray(fn);
    },
    findPrePageImagesSortByCreateTime: function(nextId, pageDis, limitNumber, fn) {
        var images = dal.find({isPending: false, _id: {$gt: db.ObjectID(nextId)}}, {sort: {createTime: 1}})
            .skip((pageDis - 1) * limitNumber).limit(limitNumber).toArray(function(err, docs) {
                if(docs && docs.length)
                    docs.sort(function(a, b){return a._id < b._id;});
                fn(err, docs);
        });
    },
    findFirstPageImagesSortByCreateTime: function(limitNumber, fn) {
        dal.find({isPending: false}).sort({createTime: -1}).limit(limitNumber + 1).toArray(fn);
    }
});

exports.dal = dal;